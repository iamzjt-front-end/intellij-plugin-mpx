<idea-plugin url="https://github.com/wuxianqiang/intellij-plugin-mpx" package="com.hxz.mpxjs">
  <!--suppress PluginXmlCapitalization -->
  <name>Mpx</name>
  <id>com.hxz.mpxjs</id>
  <description><![CDATA[
    Support for <a href="https://mpxjs.cn">Mpx</a> projects.

    <h3>Getting started</h3>

    <ul>
      <li>Open your Mpx project.</li>
      <li>Make sure you have <code>@mpxjs/core</code> listed in your project dependencies in package.json and it is installed.</li>
      <li>Now, you will get Mpx-specific code completion, navigation, and many other features in .mpx files.</li>
    </ul>

    <h3>Features</h3>

    <ul>
      <li>Completion for components, directives, props and methods in templates</li>
      <li>Navigation from the component, directives and event handlers to their definition</li>
      <li>Coding assistance for different languages inside template, script and style tags in .mpx files</li>
      <li>Extract component and rename component refactorings</li>
      <li>Collection of code snippets for Mpx</li>
      <li>Create new projects from the IDE Welcome screen using Mpx CLI</li>
    </ul>


    Learn more about Mpx support in the <a href="https://mpxjs.cn">IDE documentation</a>.
    ]]></description>
  <vendor>wuxianqiang</vendor>
  <category>JavaScript Frameworks and Tools</category>

  <dependencies>
    <plugin id="com.intellij.modules.xml"/>
    <plugin id="JavaScript"/>
    <plugin id="com.intellij.css"/>
    <plugin id="intellij.webpack"/>
    <plugin id="intellij.prettierJS"/>
  </dependencies>
<!--  <depends optional="true" config-file="js-debugger.xml">JavaScriptDebugger</depends>-->

  <extensionPoints>
    <!--suppress PluginXmlValidity -->
    <extensionPoint qualifiedName="com.intellij.mpxjs.templateScopesProvider"
                    interface="com.hxz.mpxjs.codeInsight.template.VueTemplateScopesProvider"
                    dynamic="true"/>
    <extensionPoint qualifiedName="com.intellij.mpxjs.containerInfoProvider"
                    interface="com.hxz.mpxjs.model.source.VueContainerInfoProvider"
                    dynamic="true"/>
  </extensionPoints>

  <extensions defaultExtensionNs="com.intellij">
    <lang.findUsagesProvider language="JSON"
                             implementationClass="com.hxz.mpxjs.pinkfloyded.ComponentRegistrationFindUsageProvider"
                             order="first"/>
    <xml.elementDescriptorProvider
            implementation="com.hxz.mpxjs.pinkfloyded.WXMLElementDescriptorProvider"/>
    <lang.inspectionSuppressor language="CSS"
                               implementationClass="com.hxz.mpxjs.pinkfloyded.WxssCssInspectionFilter"/>
    <psi.referenceContributor
            implementation="com.hxz.mpxjs.pinkfloyded.JsonReferenceContributor"/>
    <prettierjs.codeStyleInstaller implementation="com.hxz.mpxjs.libraries.prettier.VuePrettierCodeStyleInstaller"/>
<!--    <dependencySupport kind="javascript" coordinate="npm:mpx" displayName="Mpx.js"/>-->
<!--    <dependencySupport kind="javascript" coordinate="npm:nuxt" displayName="Nuxt"/>-->
    <css.embeddedCssProvider implementation="com.hxz.mpxjs.css.VueEmbeddedCssProvider"/>
    <css.inclusionContext implementation="com.hxz.mpxjs.css.VueCssInclusionContext"/>
    <html.attributeValueProvider implementation="com.hxz.mpxjs.codeInsight.attributes.VueCustomAttributeValueProvider"/>
    <fileType name="Mpx.js" extensions="mpx" language="Mpx" implementationClass="com.hxz.mpxjs.lang.html.VueFileType"
              fieldName="INSTANCE"/>
    <fileType name="MPXWXS" fieldName="INSTANCE" extensions="wxs" language="JavaScript 1.8"
              implementationClass="com.hxz.mpxjs.pinkfloyded.WXSFileType"/>
    <lang.parserDefinition language="Mpx" implementationClass="com.hxz.mpxjs.lang.html.parser.VueParserDefinition"/>
    <lang.parserDefinition language="MpxJS" implementationClass="com.hxz.mpxjs.lang.expr.parser.VueJSParserDefinition"/>
    <typedHandler implementation="com.hxz.mpxjs.editor.VueJSBracesInterpolationTypedHandler"/>
    <lang.braceMatcher language="MpxJS" implementationClass="com.intellij.lang.javascript.highlighting.JSBraceMatcher"/>
    <annotator language="MpxJS" implementationClass="com.intellij.lang.javascript.validation.JSAnnotator"/>
    <psi.referenceContributor language="JavaScript" implementation="com.hxz.mpxjs.codeInsight.refs.VueJSReferenceContributor"/>
    <psi.referenceContributor language="Mpx" implementation="com.hxz.mpxjs.codeInsight.refs.VueReferenceContributor"/>
    <psi.referenceContributor language="JavaScript"
                              implementation="com.hxz.mpxjs.libraries.vuex.codeInsight.refs.VuexReferenceContributor"/>
    <psi.referenceContributor language="MpxJS" implementation="com.hxz.mpxjs.css.refs.VueCssReferencesContributor"/>
    <psi.referenceContributor language="CSS" implementation="com.hxz.mpxjs.css.refs.VueCssReferencesContributor"/>
    <pom.declarationSearcher implementation="com.hxz.mpxjs.codeInsight.refs.VuePomDeclarationSearcher"/>
    <psi.fileReferenceHelper implementation="com.hxz.mpxjs.libraries.nuxt.codeInsight.NuxtFileReferenceHelper"/>
    <pathReferenceProvider implementation="com.hxz.mpxjs.libraries.vueLoader.VueLoaderPathReferenceProvider"/>
    <useScopeEnlarger implementation="com.hxz.mpxjs.findUsages.VueUseScopeEnlarger"/>
    <!--suppress PluginXmlValidity -->
    <quoteHandler className="com.intellij.codeInsight.editorActions.HtmlQuoteHandler" fileType="Mpx.js"/>

    <lang.syntaxHighlighterFactory language="Mpx"
                                   implementationClass="com.hxz.mpxjs.lang.html.highlighting.VueSyntaxHighlighterFactory"/>
    <highlightErrorFilter implementation="com.hxz.mpxjs.lang.expr.highlighting.MpxJSErrorFilter"/>
    <xml.xmlExtension implementation="com.hxz.mpxjs.codeInsight.VueXmlExtension" order="before web-symbols-react"/>
    <xml.xmlSuppressionProvider implementation="com.hxz.mpxjs.inspections.VueXmlSuppressionProvider" order="first"/>
    <html.embeddedContentSupport implementation="com.hxz.mpxjs.lang.html.lexer.VueEmbeddedContentSupport"/>
<!--    <html.embeddedContentSupport implementation="com.hxz.mpxjs.libraries.i18n.VueI18nEmbeddedContentSupport"/>-->
    <notificationGroup displayType="BALLOON" id="Mpx" isLogByDefault="true"
                       bundle="messages.VueBundle" key="vue.documentation.vue"/>

    <stubIndex implementation="com.hxz.mpxjs.index.VueComponentsIndex"/>
    <stubIndex implementation="com.hxz.mpxjs.index.VueCompositionAppIndex"/>
    <stubIndex implementation="com.hxz.mpxjs.index.VueOptionsIndex"/>
    <stubIndex implementation="com.hxz.mpxjs.index.VueMixinBindingIndex"/>
    <stubIndex implementation="com.hxz.mpxjs.index.VueExtendsBindingIndex"/>
    <stubIndex implementation="com.hxz.mpxjs.index.VueGlobalDirectivesIndex"/>
    <stubIndex implementation="com.hxz.mpxjs.index.VueUrlIndex"/>
    <stubIndex implementation="com.hxz.mpxjs.index.VueIdIndex"/>
    <stubIndex implementation="com.hxz.mpxjs.index.VueGlobalFiltersIndex"/>
    <stubIndex implementation="com.hxz.mpxjs.libraries.vuex.index.VuexStoreIndex"/>
    <fileBasedIndex implementation="com.hxz.mpxjs.index.VueEmptyComponentInitializersIndex"/>

    <stubElementTypeHolder class="com.hxz.mpxjs.lang.expr.parser.VueJSStubElementTypes" externalIdPrefix="MPX-JS:"/>
    <stubElementTypeHolder class="com.hxz.mpxjs.lang.html.parser.VueStubElementTypes" externalIdPrefix="MPX:"/>

    <langCodeStyleSettingsProvider implementation="com.hxz.mpxjs.options.VueCodeStyleSettingsProvider"/>
    <fileIndentOptionsProvider implementation="com.hxz.mpxjs.lang.html.psi.formatter.VueFileIndentOptionsProvider"
                               id="mpx" order="before html"/>


    <postStartupActivity implementation="com.hxz.mpxjs.lang.html.psi.arrangement.VueArrangementSettingsMigration"/>

    <directoryIndexExcludePolicy implementation="com.hxz.mpxjs.libraries.nuxt.index.NuxtIndexExcludePolicy"/>
    <additionalLibraryRootsProvider implementation="com.hxz.mpxjs.libraries.nuxt.library.NuxtDotFolderSyntheticLibraryProvider"/>

    <!-- works in WebStorm and other SmallIDEs -->
    <directoryProjectGenerator implementation="com.hxz.mpxjs.cli.VueCliProjectGenerator"/>
    <!-- works in IDEA -->
    <projectTemplatesFactory implementation="com.hxz.mpxjs.cli.VueProjectTemplateFactory"/>
    <!-- works in new IDEA wizard -->
    <moduleBuilder builderClass="com.hxz.mpxjs.cli.VueCLIProjectModuleBuilder"/>

<!--    <localInspection language="Mpx" groupKey="vue.inspection.group.name" shortName="MpxDataFunction"-->
<!--                     enabledByDefault="true" level="WARNING"-->
<!--                     implementationClass="com.hxz.mpxjs.inspections.DataFunctionInspection"-->
<!--                     key="vue.inspection.display.name.data.function"-->
<!--                     bundle="messages.VueBundle"/>-->
<!--    <localInspection language="Mpx" groupKey="vue.inspection.group.name" shortName="MpxDuplicateTag"-->
<!--                     enabledByDefault="true" level="WARNING"-->
<!--                     implementationClass="com.hxz.mpxjs.inspections.DuplicateTagInspection"-->
<!--                     key="vue.inspection.display.name.duplicate.tag" bundle="messages.VueBundle"/>-->
<!--    <localInspection language="Mpx" groupKey="vue.inspection.group.name" shortName="MpxMissingComponentImportInspection"-->
<!--                     enabledByDefault="true" level="WARNING"-->
<!--                     implementationClass="com.hxz.mpxjs.inspections.VueMissingComponentImportInspection"-->
<!--                     key="vue.inspection.display.name.missing.component.import" bundle="messages.VueBundle"/>-->

<!--    <localInspection language="Mpx" groupKey="vue.inspection.group.name" shortName="MpxUnrecognizedSlot"-->
<!--                     enabledByDefault="true" level="WEAK WARNING"-->
<!--                     implementationClass="com.hxz.mpxjs.inspections.VueUnrecognizedSlotInspection"-->
<!--                     key="vue.inspection.display.name.unrecognized.slot" bundle="messages.VueBundle"/>-->
<!--    <webSymbols.inspectionToolMapping symbolNamespace="html" symbolKind="vue-available-slots"-->
<!--                                      toolShortName="VueUnrecognizedSlot"/>-->

<!--    <localInspection language="Mpx" groupKey="vue.inspection.group.name" shortName="MpxUnrecognizedDirective"-->
<!--                     enabledByDefault="true" level="WARNING"-->
<!--                     implementationClass="com.hxz.mpxjs.inspections.VueUnrecognizedDirectiveInspection"-->
<!--                     key="vue.inspection.display.name.unrecognized.directive" bundle="messages.VueBundle"/>-->
<!--    <webSymbols.inspectionToolMapping symbolNamespace="html" symbolKind="vue-directives"-->
<!--                                      toolShortName="VueUnrecognizedDirective"/>-->

<!--    <localInspection language="Mpx" groupKey="vue.inspection.group.name" shortName="MpxDeprecatedSymbol"-->
<!--                     enabledByDefault="true" level="WARNING"-->
<!--                     implementationClass="com.hxz.mpxjs.inspections.VueDeprecatedSymbolInspection"-->
<!--                     key="vue.inspection.display.name.deprecated.symbol" bundle="messages.VueBundle"/>-->
<!--    <webSymbols.inspectionToolMapping symbolNamespace="html" symbolKind="mpx-available-slots"-->
<!--                                      toolShortName="MpxDeprecatedSymbol"/>-->
<!--    <webSymbols.inspectionToolMapping symbolNamespace="html" symbolKind="vue-components"-->
<!--                                      toolShortName="VueDeprecatedSymbol"/>-->
<!--    <webSymbols.inspectionToolMapping symbolNamespace="html" symbolKind="vue-directives"-->
<!--                                      toolShortName="VueDeprecatedSymbol"/>-->
<!--    <webSymbols.inspectionToolMapping symbolNamespace="html" symbolKind="vue-special-properties"-->
<!--                                      toolShortName="VueDeprecatedSymbol"/>-->
<!--    <webSymbols.inspectionToolMapping symbolNamespace="html" symbolKind="vue-file-top-elements"-->
<!--                                      toolShortName="VueDeprecatedSymbol"/>-->
<!--    <webSymbols.inspectionToolMapping symbolNamespace="html" symbolKind="vue-model-modifiers"-->
<!--                                      toolShortName="VueDeprecatedSymbol"/>-->

<!--    <webSymbols.documentationCustomizer implementation="com.hxz.mpxjs.web.VueDocumentationCustomizer"/>-->

    <intentionAction>
      <language>Mpx</language>
      <className>com.hxz.mpxjs.intentions.extractComponent.VueExtractComponentIntention</className>
      <!--suppress PluginXmlI18n -->
      <category>MpxJS</category>
    </intentionAction>
    <intentionAction>
      <language>Mpx</language>
      <className>com.hxz.mpxjs.intentions.VueExpandVModelIntention</className>
      <!--suppress PluginXmlI18n -->
      <category>MpxJS</category>
    </intentionAction>
    <intentionAction>
      <language>Mpx</language>
      <className>com.hxz.mpxjs.intentions.VueImportComponentIntention</className>
      <!--suppress PluginXmlI18n -->
      <category>MpxJS</category>
    </intentionAction>

    <!--suppress PluginXmlValidity -->
    <multiHostInjector implementation="com.hxz.mpxjs.editor.VueInjector"
                       order="before JSConfigurationInjector, before WebSymbolsHtmlText, after TemporaryPlacesInjector"
                       id="MpxInjector"/>

    <internalFileTemplate name="Mpx Single File Component"/>
    <createFromTemplateHandler implementation="com.hxz.mpxjs.VueCreateFromTemplateHandler"/>

    <spellchecker.bundledDictionaryProvider implementation="com.hxz.mpxjs.spellchecker.VueSpellcheckingDictionaryProvider"/>
    <spellchecker.support language="Mpx" implementationClass="com.hxz.mpxjs.spellchecker.VueSpellcheckingStrategy"/>

    <liveTemplateContext contextId="Mpx" implementation="com.hxz.mpxjs.liveTemplate.VueBaseLiveTemplateContextType"/>
    <liveTemplateContext contextId="MPX_SCRIPT" baseContextId="Mpx"
                         implementation="com.hxz.mpxjs.liveTemplate.VueScriptLiveTemplateContextType"/>
    <liveTemplateContext contextId="MPX_COMPONENT_DESCRIPTOR" baseContextId="Mpx"
                         implementation="com.hxz.mpxjs.liveTemplate.VueComponentDescriptorLiveTemplateContextType"/>
    <liveTemplateContext contextId="MPX_TEMPLATE" baseContextId="Mpx"
                         implementation="com.hxz.mpxjs.liveTemplate.VueTemplateLiveTemplateContextType"/>
    <liveTemplateContext contextId="MPX_INSIDE_TAG" baseContextId="Mpx"
                         implementation="com.hxz.mpxjs.liveTemplate.VueInsideTagLiveTemplateContextType"/>
    <liveTemplateContext contextId="MPX_TOP_LEVEL" baseContextId="Mpx"
                         implementation="com.hxz.mpxjs.liveTemplate.VueTopLevelLiveTemplateContextType"/>
<!--    <defaultLiveTemplates file="liveTemplates/Mpx"/>-->
    <referencesSearch implementation="com.hxz.mpxjs.findUsages.VueJSReferenceSearcher"/>
    <completion.contributor language="any"
                            implementationClass="com.hxz.mpxjs.codeInsight.VueCompletionContributor"
                            id="MpxCompletionContributor"
                            order="before JSPatternBasedCompletionContributor, before JSCompletionContributor, before xmlNonFirst, before cssClassOrIdReferenceCompletionContributor"/>
    <completion.contributor language="JavaScript"
                            implementationClass="com.hxz.mpxjs.libraries.vuex.codeInsight.VuexCompletionContributor"
                            id="MpxStoreCompletionContributor"/>
    <typedHandler implementation="com.hxz.mpxjs.codeInsight.completion.VueAutoPopupHandler"/>
    <include.provider implementation="com.hxz.mpxjs.index.VueES6ModuleFileIncludeProvider"/>

    <highlightingPassFactory
      implementation="com.hxz.mpxjs.lang.typescript.service.VueTypeScriptServiceHighlightingPassFactoryRegistrar"/>
    <lang.formatter language="Mpx" implementationClass="com.hxz.mpxjs.lang.html.psi.formatter.VueFormattingModelBuilder"/>
    <lang.formatter language="MpxJS" implementationClass="com.hxz.mpxjs.lang.expr.psi.formatter.VueJSFormattingModelBuilder"/>
    <lang.rearranger language="Mpx" implementationClass="com.hxz.mpxjs.lang.html.psi.arrangement.VueRearranger"/>
    <multiLangCommenter implementation="com.hxz.mpxjs.editor.VueCommenterProvider"/>

    <lang.syntaxHighlighterFactory language="MpxJS"
                                   implementationClass="com.hxz.mpxjs.lang.expr.highlighting.VueJSHighlighterFactory"/>
    <idIndexer filetype="Mpx" implementationClass="com.hxz.mpxjs.lang.html.index.VueIdIndexer"/>
    <todoIndexer filetype="Mpx" implementationClass="com.hxz.mpxjs.lang.html.index.VueTodoIndexer"/>

    <codeInsight.parameterInfo language="MpxJS" implementationClass="com.intellij.javascript.JSParameterInfoHandler"/>
    <codeInsight.parameterNameHints language="Mpx"
                                    implementationClass="com.hxz.mpxjs.editor.VueJSInlayParameterHintsProvider"/>

    <eslint.ruleMappersFactory implementation="com.hxz.mpxjs.libraries.eslint.VueEslintRuleMappersFactory"/>

<!--    <psi.symbolReferenceProvider hostElementClass="com.intellij.psi.xml.XmlAttributeValue"-->
<!--                                 hostLanguage="HtmlCompatible"-->
<!--                                 implementationClass="com.hxz.mpxjs.web.VueDeprecatedSlotAttributeReferenceProvider"-->
<!--                                 anyReferenceClass="true"-->
<!--                                 targetClass="com.intellij.webSymbols.WebSymbol"/>-->
    <rename.symbolRenameTargetFactory implementation="com.hxz.mpxjs.web.VueSymbolRenameTargetFactory"/>
    <webSymbols.declarationProvider implementation="com.hxz.mpxjs.web.VueSymbolDeclarationProvider"/>
    <vetoRenameCondition implementation="com.hxz.mpxjs.web.VueRenameHandlerVeto"/>

    <webSymbols.framework id="mpx" implementation="com.hxz.mpxjs.web.VueFramework"/>
    <webSymbols.context kind="framework" name="mpx" implementation="com.hxz.mpxjs.context.VueFileContext"
                        id="mpx.file"/>

    <webSymbols.webTypes source="web-types/vue@3.2.0.web-types.json" enableByDefault="true"/>
<!--    <webSymbols.webTypes source="web-types/vue-i18n@0.0.0.web-types.json"/>-->
    <webSymbols.webTypes source="web-types/vue-contexts@0.0.0.web-types.json" enableByDefault="true"/>

    <webSymbols.queryConfigurator implementation="com.hxz.mpxjs.web.VueWebSymbolsQueryConfigurator" id="mpx"/>
<!--    <webSymbols.queryConfigurator implementation="com.hxz.mpxjs.libraries.i18n.VueI18NQueryConfigurator"-->
<!--                                          id="mpx-i18n"/>-->

<!--    <webSymbols.queryResultsCustomizerFactory implementation="com.hxz.mpxjs.web.VueWebSymbolsQueryResultsCustomizer$Provider"/>-->
    <webSymbols.webTypes.filter name="mpx-bind" implementation="com.hxz.mpxjs.web.VueBindFilter"/>
    <webSymbols.codeCompletionItemCustomizer
      implementation="com.hxz.mpxjs.web.VueSymbolsCodeCompletionItemCustomizer"/>

    <mpxjs.templateScopesProvider
      implementation="com.hxz.mpxjs.codeInsight.template.VueStandardSymbolsScopesProvider"
      id="standardSymbols"
      order="before templateElements"/>
    <mpxjs.templateScopesProvider
      implementation="com.hxz.mpxjs.codeInsight.template.VueTemplateElementsScopeProvider"
      id="templateElements"/>
    <mpxjs.templateScopesProvider
      implementation="com.hxz.mpxjs.codeInsight.template.VueScriptSetupScopeProvider"
      id="scriptSetupScope"
      order="after templateElements"/>
    <mpxjs.templateScopesProvider
      implementation="com.hxz.mpxjs.codeInsight.template.VueContainerScopeProvider"
      id="containerScope"
      order="after scriptSetupScope"/>

    <mpxjs.containerInfoProvider implementation="com.hxz.mpxjs.model.source.VueDefaultContainerInfoProvider"
                                 id="default"/>
    <mpxjs.containerInfoProvider implementation="com.hxz.mpxjs.model.source.VueComponentTemplateInfoProvider"
                                 id="defaultTemplate"
                                 order="after default, before decoratedComponent"/>
    <mpxjs.containerInfoProvider implementation="com.hxz.mpxjs.model.source.VueCompositionInfoProvider"
                                 id="composition"
                                 order="after default, before decoratedComponent"/>
    <mpxjs.containerInfoProvider implementation="com.hxz.mpxjs.model.source.VueScriptSetupInfoProvider"
                                 id="scriptSetup"
                                 order="after default, before decoratedComponent"/>
    <mpxjs.containerInfoProvider implementation="com.hxz.mpxjs.libraries.componentDecorator.VueDecoratedComponentInfoProvider"
                                 id="decoratedComponent"
                                 order="after default"/>
    <mpxjs.containerInfoProvider implementation="com.hxz.mpxjs.libraries.vuex.model.component.VuexBasicComponentInfoProvider"
                                 id="vuexBasic"
                                 order="after decoratedComponent"/>
    <mpxjs.containerInfoProvider implementation="com.hxz.mpxjs.libraries.vuex.model.component.VuexDecoratedComponentInfoProvider"
                                 id="vuexDecoratedComponent"
                                 order="after decoratedComponent"/>
<!--    <mpxjs.containerInfoProvider implementation="com.hxz.mpxjs.libraries.templateLoader.TemplateLoaderComponentInfoProvider"-->
<!--                                 id="templateLoader"-->
<!--                                 order="after defaultTemplate"/>-->
    <mpxjs.containerInfoProvider implementation="com.hxz.mpxjs.libraries.vuelidate.VuelidateContainerInfoProvider"
                                 id="vuelidate"
                                 order="after decoratedComponent"/>
    <mpxjs.containerInfoProvider implementation="com.hxz.mpxjs.libraries.nuxt.model.NuxtComponentProvider"
                                 id="nuxt"/>
    <mpxjs.containerInfoProvider implementation="com.hxz.mpxjs.libraries.cssModules.VueCssModulesInfoProvider"
                                 id="css-modules"/>

    <lang.documentationProvider implementationClass="com.hxz.mpxjs.codeInsight.documentation.VueDocumentationProvider"
                                language="MpxJS"/>
  </extensions>
  <actions>
    <action class="com.hxz.mpxjs.CreateVueSingleFileComponentAction" id="CreateMpxSingleFileComp">
      <add-to-group group-id="NewGroup" anchor="before" relative-to-action="NewFromTemplate"/>
    </action>
    <action class="com.hxz.mpxjs.intentions.extractComponent.VueExtractComponentAction" id="MpxExtractComponentAction">
      <add-to-group group-id="IntroduceActionsGroup" anchor="last"/>
    </action>
  </actions>

  <extensions defaultExtensionNs="JavaScript">
    <JsonSchema.ProviderFactory implementation="com.hxz.mpxjs.pinkfloyded.WechatMiniProgramJsonSchemaProviderFactory"/>
    <elementScopeProvider implementation="com.hxz.mpxjs.VueElementResolveScopeProvider"/>
    <indexedFileTypeProvider implementation="com.hxz.mpxjs.lang.html.VueIndexedFileTypeProvider"/>r

    <frameworkIndexingHandler implementation="com.hxz.mpxjs.index.VueFrameworkHandler" version="23"/>
    <frameworkIndexingHandler implementation="com.hxz.mpxjs.libraries.vuex.index.VuexFrameworkHandler" version="7"/>
<!--    <frameworkIndexingHandler implementation="com.hxz.mpxjs.libraries.templateLoader.TemplateLoaderFrameworkHandler" version="1"/>-->

    <intentionAndInspectionFilter language="MpxJS" implementationClass="com.hxz.mpxjs.inspections.VueInspectionFilter"/>
    <inheritedLanguagesConfigurableProvider language="MpxJS"
                                            implementationClass="com.hxz.mpxjs.codeInsight.VueJSLanguageConfigurableProvider"/>
    <dialectSpecificHandlersFactory language="MpxJS" implementationClass="com.hxz.mpxjs.codeInsight.VueJSSpecificHandlersFactory"/>
    <dialectSpecificHandlersFactory language="Mpx" implementationClass="com.hxz.mpxjs.codeInsight.VueJSSpecificHandlersFactory"/>
    <handlersFactory language="MpxJS" implementationClass="com.hxz.mpxjs.codeInsight.VueJSHandlersFactory"/>
    <frameworkSpecificHandler language="JavaScript"
                              implementationClass="com.hxz.mpxjs.libraries.nuxt.codeInsight.NuxtFrameworkSpecificHandler"/>
    <frameworkSpecificHandler language="JavaScript"
                              implementationClass="com.hxz.mpxjs.codeInsight.VueFrameworkSpecificHandler"/>
    <frameworkSpecificHandler language="JavaScript"
                              implementationClass="com.hxz.mpxjs.codeInsight.VueFrameworkInsideScriptSpecificHandler"/>
    <frameworkSpecificHandler language="JavaScript"
                              implementationClass="com.hxz.mpxjs.libraries.vuex.codeInsight.VuexFrameworkSpecificHandler"/>
<!--    <analysisHandlersFactory implementationClass="com.hxz.mpxjs.inspections.VueAnalysisHandlersFactory" language="MpxJS"/>-->
    <tsImportResolver implementation="com.hxz.mpxjs.lang.typescript.VueTypeScriptImportsResolverProvider" order="first"/>
    <importModulePathStrategy implementation="com.hxz.mpxjs.lang.VueImportModulePathStrategy"/>
    <!--suppress PluginXmlValidity -->
    <languageServiceProvider order="first" implementation="com.hxz.mpxjs.lang.typescript.service.VueLanguageServiceProvider"/>
<!--    <importCandidatesFactory implementation="com.hxz.mpxjs.codeInsight.VueScriptCandidatesProvider"/>-->
<!--    <importCandidatesFactory implementation="com.hxz.mpxjs.codeInsight.VueComponentImportCandidatesProvider"/>-->
  </extensions>

  <extensions defaultExtensionNs="intellij.webpack">
    <!--suppress PluginXmlValidity -->
    <webpackLocator implementation="com.hxz.mpxjs.cli.VueCliWebpackConfigLocator"/>
    <!--suppress PluginXmlValidity -->
    <webpackLocator implementation="com.hxz.mpxjs.libraries.nuxt.codeInsight.NuxtWebpackConfigLocator"/>
  </extensions>
</idea-plugin>
